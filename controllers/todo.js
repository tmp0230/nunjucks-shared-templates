// Generated by CoffeeScript 1.4.0
(function() {
  var api, async, templating, _;

  async = require('async');

  _ = require('underscore');

  templating = require('../config/templating');

  api = require('../api/todoConnector');

  exports.index = function(req, res) {
    return api.getTodos(function(err, todos) {
      if (todos == null) {
        todos = [];
      }
      if (err) {
        req.flash('error', 'Could not retrieve todo lists');
      }
      return res.render('todo/index.html', {
        todoLists: todos
      });
    });
  };

  exports.create = function(req, res) {
    return api.createTodo(function(err, todo) {
      if (err) {
        req.flash('error', 'Could not add another todo list');
      }
      return res.json(todo);
    });
  };

  exports.items = {
    create: function(req, res) {
      return api.createTodoItem(req.body.desc, req.params.todoId, function(err, item) {
        if (err) {
          req.flash('error', 'Could not create todo item');
        }
        return res.json(item);
      });
    },
    save: function(req, res) {
      req.body.done = !!req.body.done;
      return api.saveTodoItem(req.body, req.params.todoId, function(err, item) {
        if (err) {
          req.flash('error', 'Could not save todo item');
        }
        return res.json(item);
      });
    },
    "delete": function(req, res) {
      return api.deleteTodoItem(req.body, req.params.todoId, function(err, item) {
        if (err) {
          req.flash('error', 'Could not delete todo item');
        }
        return res.json(item);
      });
    }
  };

}).call(this);
